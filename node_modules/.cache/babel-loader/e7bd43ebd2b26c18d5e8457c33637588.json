{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanos\\\\Downloads\\\\Archive_emply_dir (2)\\\\src\\\\components\\\\EmployeeTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EmployeeRow from './EmployeeRow';\nimport currentEmployees from '../data/employee.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeTable(props) {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [displayEmployees, setdisplayEmployees] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  const [newFilterValues, setNewFilterValues] = useState([]);\n\n  const createEmployeeRows = theArray => {\n    const display = theArray.map((ele, idx) => {\n      return /*#__PURE__*/_jsxDEV(EmployeeRow, {\n        id: ele.login.uuid,\n        first_name: ele.name.first,\n        last_name: ele.name.last,\n        email: ele.email,\n        job_title: ele.cell\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n    });\n    return display;\n  }; // Lifecycle function\n\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=50').then(response => {\n      // network failure, request prevented\n      if (response.status >= 200 && response.status < 300) {\n        return Promise.resolve(response);\n      }\n\n      return Promise.reject(new Error(response.statusText));\n    }).then(response => response.json()).then(data => {\n      console.log(data.results);\n      return data.results;\n    }).then(data => {\n      console.log(data);\n      const display = createEmployeeRows(data);\n      console.log(\"display\", display);\n      setdisplayEmployees([...displayEmployees, display]);\n      return data;\n    }).then(data => {\n      setEmployees(prev => {\n        return [...prev, ...data];\n      }); // setEmployees(data.results)\n    }).catch(error => {\n      // common error\n      return null;\n    });\n  }, []);\n\n  const handleFilterChange = evt => {\n    evt.preventDefault();\n\n    if (evt.target.value === \"No Filter\") {\n      const display = createEmployeeRows(employees);\n      setdisplayEmployees(display);\n      setFiltered(false);\n      return 1;\n    } // ANCHOR TThis is just atest\n\n\n    let result = employees.filter(myemploy => {\n      if (myemploy.gender === evt.target.value) {\n        return myemploy;\n      }\n    });\n    const mapResult = createEmployeeRows(result);\n\n    if (mapResult !== null) {\n      setNewFilterValues([...mapResult]);\n      setFiltered(true);\n    } else {\n      setFiltered(false);\n    }\n  };\n\n  const handleSortChange = evt => {\n    evt.preventDefault();\n    const sortEmploy = [...employees];\n    sortEmploy.sort((a, b) => {\n      if (a.name.last < b.name.last) {\n        return -1;\n      }\n\n      if (a.name.last > b.name.last) {\n        return 1;\n      }\n\n      return 0;\n    });\n    const display = createEmployeeRows(sortEmploy);\n    setNewFilterValues(display);\n    setFiltered(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filterId\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter Employees by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"No Filter\",\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sortId\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sort Employees by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"last_name\",\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"last_name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filtered ? newFilterValues : displayEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeeTable, \"LxL7Pw004AjYcNmWvP76T2k+PMg=\");\n\n_c = EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["C:/Users/nanos/Downloads/Archive_emply_dir (2)/src/components/EmployeeTable.js"],"names":["React","useState","useEffect","EmployeeRow","currentEmployees","EmployeeTable","props","employees","setEmployees","displayEmployees","setdisplayEmployees","filtered","setFiltered","newFilterValues","setNewFilterValues","createEmployeeRows","theArray","display","map","ele","idx","login","uuid","name","first","last","email","cell","fetch","then","response","status","Promise","resolve","reject","Error","statusText","json","data","console","log","results","prev","catch","error","handleFilterChange","evt","preventDefault","target","value","result","filter","myemploy","gender","mapResult","handleSortChange","sortEmploy","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport EmployeeRow from './EmployeeRow';\nimport currentEmployees from '../data/employee.json'\n\n\nexport default function EmployeeTable(props) {\n    const [employees, setEmployees] = useState([])\n    const [displayEmployees, setdisplayEmployees] = useState([]);\n    const [filtered, setFiltered] = useState(false);\n    const [newFilterValues, setNewFilterValues] = useState([]);\n\n    const createEmployeeRows = (theArray) => {\n        const display = theArray.map((ele, idx) => {\n            return (<EmployeeRow\n                key={idx}\n                id={ele.login.uuid}\n                first_name={ele.name.first}\n                last_name={ele.name.last}\n                email={ele.email}\n                job_title={ele.cell}\n            />)\n        });\n        \n        return display;\n    }\n\n    // Lifecycle function\n    useEffect(() => {\n        fetch('https://randomuser.me/api/?results=50')\n            .then(response => {\n                // network failure, request prevented\n                if (response.status >= 200 && response.status < 300) {\n                    return Promise.resolve(response);\n                }\n        \n        \n                return Promise.reject(new Error(response.statusText));\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.results)\n                return data.results ;\n            })\n            .then((data) => { \n                console.log(data)\n                const display = createEmployeeRows(data)\n\n                console.log(\"display\", display);\n\n                setdisplayEmployees([...displayEmployees, display])\n                return data\n             })\n            .then((data) => {\n                setEmployees((prev) => {\n                    return [...prev, ...data]\n                });\n                // setEmployees(data.results)\n             })\n            .catch(error => {\n                // common error\n                return null;\n            });\n        \n        \n    }, []);\n\n    const handleFilterChange = (evt) => {\n        evt.preventDefault();\n        if (evt.target.value === \"No Filter\") {\n            const display = createEmployeeRows(employees)\n\n            setdisplayEmployees(display)\n            setFiltered(false);\n            return 1;\n        }\n        // ANCHOR TThis is just atest\n        let result = employees.filter(myemploy => {\n            if (myemploy.gender === evt.target.value) {\n\n                return myemploy;\n            }\n        })\n\n        const mapResult = createEmployeeRows(result)\n\n        if (mapResult !== null) {\n            setNewFilterValues([...mapResult]);\n            setFiltered(true)\n        }\n        else {\n            setFiltered(false)\n        }\n    }\n\n    const handleSortChange = (evt) => {\n        evt.preventDefault();\n        const sortEmploy = [...employees]\n\n        sortEmploy.sort((a, b) => {\n            if (a.name.last < b.name.last) { return -1; }\n            if (a.name.last > b.name.last) { return 1; }\n            return 0;\n        });\n\n        const display = createEmployeeRows(sortEmploy);\n\n        setNewFilterValues(display)\n        setFiltered(true)\n    }\n\n    return (\n        <div>\n            <div id=\"filterId\">\n                <label>\n                    Filter Employees by:\n                </label>\n                <select onChange={handleFilterChange}>\n                    <option value=\"No Filter\">Filter</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"male\">Male</option>\n                    {/* <option value=\"Tester\">Tester</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Account Executive\">Account Executive</option>\n                    <option value=\"Help Desk\">Help Desk</option> */}\n                </select>\n            </div>\n            <div id=\"sortId\">\n                <label>\n                    Sort Employees by:\n                </label>\n                <select onChange={handleSortChange}>\n                    <option value=\"last_name\">Sort</option>\n                    <option value=\"last_name\">Last Name</option>\n                </select>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Job Title</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {filtered ? newFilterValues : displayEmployees}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}